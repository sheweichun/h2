<style lang="less">
page {
  width: 100%;
  height: 100%;
  background-color: #fff;
}

.circle-box {
  text-align: center;
  margin-top: 10vw;
}

.circle {
  position: absolute;
  left: 0;
  right: 0;
  margin: auto;
}

.draw_btn {
  width: 35vw;
  position: absolute;
  top: 33vw;
  right: 0;
  left: 0;
  margin: auto;
  border: 1px #000 solid;
  border-radius: 5vw;
}
</style>
<template>
<view class="wrap" bindtap="drawCircle">
  <view class="circle-box">
    <canvas wx:if="{{showCanvas}}" class="circle" style="width:200px; height:200px;" canvas-id="canvasArcCir">
    </canvas>
    <view class="draw_btn" >开始动态绘制</view>
  </view>
</view>
</template> 
<script>
    import wepy from 'wepy';
    export default class Progress extends wepy.component {
        props = {

        };
        components = {
          // shopitem:ShopItem
        };
        data = {
            showCanvas:true
        };
        duration = 1000;
        ctx = wepy.createCanvasContext('canvasArcCir');
        methods = {
            drawCircle:function() {
                const self = this;
                const startTm =  Date.now();
                const {ctx} = self;
                const x = 100, y = 100, radius = 96;
                let startAngle = 1.5 * Math.PI, endAngle = startAngle;
                let isBigger = false;
                // wepy.showToast('Hello World');
                function drawArc(s, e) {
                    // ctx.setFillStyle('white');
                    // ctx.clearRect(0, 0, 200, 200);
                    // ctx.draw();
                    ctx.setLineWidth(6);
                    ctx.setStrokeStyle('#eaeaea');
                    ctx.setLineCap('round');
                    ctx.beginPath();
                    ctx.arc(100, 100, 96, 0, 2 * Math.PI, false);
                    ctx.stroke();
                    // ctx.endPath();

                    ctx.setLineWidth(5);
                    ctx.setStrokeStyle('#d81e06');
                    ctx.setLineCap('round');
                    ctx.beginPath();
                    ctx.arc(x, y, radius, s, e, false);
                    ctx.stroke();
                    // ctx.endPath();
                    ctx.draw()
                    // console.log('drawArc');
                    setTimeout(() => {
                        const diff = Date.now() - startTm;
                        if(diff < (self.duration * 1.1) || !isBigger){
                            isBigger = true;
                            endAngle = diff * 2 * Math.PI / self.duration + startAngle;
                            drawArc(startAngle, endAngle);
                        }else{
                            self.showCanvas = false;
                            self.$apply();
                        }
                    }, 16);
                }
                drawArc(startAngle, endAngle);
            }
        };
        
        onLoad() {
            console.log('onload');
            //创建并返回绘图上下文context对象。
            // var cxt_arc = wepy.createCanvasContext('canvasCircle');
            // cxt_arc.setLineWidth(6);
            // cxt_arc.setStrokeStyle('#eaeaea');
            // cxt_arc.setLineCap('round');
            // cxt_arc.beginPath();
            // cxt_arc.arc(100, 100, 96, 0, 2 * Math.PI, false);
            // cxt_arc.stroke();
            // cxt_arc.draw();
        }
    }
</script>
